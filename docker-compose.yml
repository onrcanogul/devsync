version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - example-net
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: gateway-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - example-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - example-net
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 15s
      timeout: 10s
      retries: 5

  analyze-db:
    image: postgres:latest
    container_name: analyze-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: analyze-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - analyze-db-data:/var/lib/postgresql/data
    networks:
      - example-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  git-db:
    image: postgres:latest
    container_name: git-postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: git-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - git-db-data:/var/lib/postgresql/data
    networks:
      - example-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-db:
    image: postgres:latest
    container_name: user-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: user-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - example-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.18
    container_name: context-neo4j
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=neo4j/password123
    volumes:
      - ./data:/data
    networks:
      - example-net
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password123", "RETURN 1;"]
      interval: 15s
      timeout: 10s
      retries: 5


  ngrok:
    image: ngrok/ngrok:latest
    container_name: devsync-ngrok
    restart: unless-stopped
    command: http host.docker.internal:8081
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - example-net
    depends_on:
      git-service:
        condition: service_healthy

  git-service:
    build: ./git-service
    ports:
      - "8081:8080"
    depends_on:
      git-db:
        condition: service_healthy
    networks:
      - example-net
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  analyze-service:
    build: ./analyze-service
    ports:
      - "8080:8080"
    depends_on:
      analyze-db:
        condition: service_healthy
    networks:
      - example-net
    environment:
      OPENAI_TOKEN: ${OPENAI_TOKEN}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      OPENAI_MODEL: ${OPENAI_MODEL}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  context-graph-service:
    build: ./context-graph-service
    ports:
      - "8085:8080"
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - example-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./auth-service
    ports:
      - "8082:8080"
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
    networks:
      - example-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8080"
    depends_on:
      git-service:
        condition: service_healthy
      analyze-service:
        condition: service_healthy
      context-graph-service:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - example-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - example-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  analyze-db-data:
  git-db-data:
  user-db-data:

networks:
  example-net:
    driver: bridge
